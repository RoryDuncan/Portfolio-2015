// Generated by CoffeeScript 1.8.0
var Joi, codepens, csrf, data, examples, jsonfile, scheme, sendmail, work;

data = require("./hero.js");

csrf = require("csrf-lite");

Joi = require("joi");

sendmail = require("./mail.js");

jsonfile = require('jsonfile');

work = {
  examples: "" + __dirname + "/data/work.json",
  codepens: "" + __dirname + "/data/codepens.json"
};

examples = jsonfile.readFileSync(work.examples);

codepens = jsonfile.readFileSync(work.codepens);


/*
    Routes
 */

scheme = Joi.object().keys({
  'name': Joi.string().min(3).max(64).required(),
  'email': Joi.string().email().required(),
  'message': Joi.string().min(3).max(64).required(),
  'x-csrf-token': Joi.string()
});

module.exports = function(server) {
  server.route({
    method: 'GET',
    path: '/favicon.ico',
    handler: function(request, reply) {
      return reply.file("./favicon.ico");
    }
  });
  server.route({
    method: 'GET',
    path: '/images/{file*}',
    handler: {
      directory: {
        path: 'public/images',
        listing: true
      }
    }
  });
  server.route({
    method: 'GET',
    path: '/css/{file*}',
    handler: {
      directory: {
        path: 'public/css',
        listing: true
      }
    }
  });
  server.route({
    method: 'GET',
    path: '/scripts/{file*}',
    handler: {
      directory: {
        path: 'public/scripts',
        listing: true
      }
    }
  });
  server.route({
    method: 'GET',
    path: '/{file*}',
    handler: {
      directory: {
        path: 'public',
        listing: true
      }
    }
  });
  server.route({
    method: 'GET',
    path: '/',
    handler: function(req, reply) {
      return reply.view('index', {
        data: data
      });
    }
  });
  server.state("_token", {
    ttl: 60 * 60 * 1000,
    isSecure: false,
    isHttpOnly: true,
    encoding: 'base64json'
  });
  server.route({
    method: 'GET',
    path: '/contact',
    config: {
      state: {
        parse: true
      }
    },
    handler: function(req, reply) {
      var token;
      token = req.state._token;
      if (!token) {
        token = csrf();
      }
      return reply.view("contact", {
        token: csrf.html(token),
        postdata: {}
      }).state("_token", token);
    }
  });
  server.route({
    method: 'POST',
    path: '/contact',
    config: {
      state: {
        parse: true
      }
    },
    handler: function(req, reply) {
      var postdata, token;
      token = req.state._token;
      postdata = Joi.validate(req.payload, scheme);
      if (postdata.error) {
        return reply.view("contact", {
          token: csrf.html(token),
          postdata: postdata.value,
          errors: postdata.error
        });
      }
      if (csrf.validate(postdata.value, token) === false) {
        return reply.view("contact", {
          messageSent: true,
          postdata: postdata
        });
      } else {
        return sendmail(postdata.value, function(error, info) {
          if (error) {
            console.log("An error occurred when sending mail.", error);
            return reply.view("error", {
              message: "An error occurred when sending mail."
            });
          } else {
            return reply.view("contact", {
              messageSent: true
            });
          }
        });
      }
    }
  });
  server.route({
    method: 'GET',
    path: "/about",
    handler: function(req, reply) {
      return reply.view("about");
    }
  });
  server.route({
    method: 'GET',
    path: "/work",
    handler: function(req, reply) {
      return reply.view("work", {
        examples: examples,
        codepens: codepens
      });
    }
  });
  return server;
};
