// Generated by CoffeeScript 1.8.0
var renderImagesAs3by3, run, shuffle;

shuffle = function(a) {
  var i, j, t;
  i = a.length;
  while (--i > 0) {
    j = ~~(Math.random() * (i + 1));
    t = a[j];
    a[j] = a[i];
    a[i] = t;
  }
  return a;
};

renderImagesAs3by3 = function(canvas, images) {
  var height, i, image, padding, width, y, _i, _len, _results;
  shuffle(images);
  canvas.clear("#fcfcfc");
  padding = 20;
  width = height = 150;
  y = 0;
  _results = [];
  for (i = _i = 0, _len = images.length; _i < _len; i = ++_i) {
    image = images[i];
    _results.push((function(image, i) {
      var x;
      x = (i % 3) * width;
      if (i % 3 === 0 && i !== 1 && i !== 0) {
        y += 1;
      }
      return canvas.drawImage(image, padding + x, padding + y * height, width, height);
    })(image, i));
  }
  return _results;
};

run = function() {
  var canvas, complete, data, el, image, images, loadImage, loaded, _i, _len, _ref, _results;
  images = [];
  loaded = 0;
  data = window.herodata;
  el = document.getElementById("hero");
  console.log(window.getComputedStyle(el).getPropertyValue("display"));
  canvas = new CodePenCanvas({
    el: el,
    maximize: false
  });
  canvas.canvas.width = canvas.width = canvas.height = canvas.canvas.height = 500;
  complete = function() {
    var action, changes, hovers, limited, mouse;
    mouse = {
      x: canvas.width / 2,
      y: canvas.height / 2
    };
    hovers = 1;
    changes = 10;
    action = function() {
      renderImagesAs3by3(canvas, images);
      changes -= 1;
      return hovers += 2;
    };
    limited = canvas.throttle(action, 120);
    canvas.render(function() {
      if (changes > 0) {
        return limited();
      }
    });
    canvas.start();
    limited();
    canvas.canvas.addEventListener("mouseover", function() {
      return changes = 2 + ~~(Math.random() * 30);
    });
  };
  loadImage = function() {
    loaded++;
    if (loaded === data.images.length) {
      complete();
    }
  };
  _ref = data.images;
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    image = _ref[_i];
    _results.push((function(image) {
      var img;
      img = new Image();
      img.onload = loadImage;
      img.src = data.path + image;
      return images.push(img);
    })(image));
  }
  return _results;
};

document.onreadystatechange = function() {
  if (document.readyState === "complete") {
    return run();
  }
};
